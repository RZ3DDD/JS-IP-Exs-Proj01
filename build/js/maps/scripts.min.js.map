{"version":3,"sources":["scripts.js"],"names":["getNumberAnswer","question","defaultNumber","answer","prompt","str","sourceStr","i","nextChar","simpleSpaceSaved","length","destStr","normalizationOfSpaces","trim","isNaN","movies","actors","genres","privat","toggleVisibleMyDB","this","showMovieDB","console","log","start","numberOfFilms","detectPersonalLevel","nextFilm","count","alert","score","film","writeGenres","getNonEmptyAnswer","forEach","concat","logGenresRating","item","index"],"mappings":"aAqGA,SAASA,EAAgBC,EAAUC,GAE/B,IAVA,IAAIC,EAAS,GAWV,iBATCA,EAASC,OAAOH,EAAU,OAS3BE,EAMP,SAA+BE,GAQvB,IAAAC,EAAgBC,EAAID,OAChBE,EAAWF,GALfE,EAAW,GAMPC,GAAA,EAGC,CAAA,GAHDH,EAGWG,OAAAA,CALf,IAAK,IAAIF,EAAI,EAAGA,EAAID,EAAUI,OAAQH,IAAK,CAO1C,GAAA,OADGI,EAAiBL,EAAGE,IACvB,CAJO,GAAIC,EAAkB,SAK9BA,GAAA,OACGA,EAAOH,IAAP,EACVK,GAAAH,EAFO,OAAOG,EACJ,OAAOL,GAvBXM,CAAAT,KACWC,GAAOH,EAAUC,OAAAA,IAD/B,OAESC,EAEZ,SAAAH,EAAAC,EAAAC,GAGG,IADJ,IAAAC,EAASS,EAEeC,KAPhBV,GAAUC,OAAOH,EAAUC,KAO/B,MAAAC,GAAAW,MAAAX,KAAA,OACIQ,GAlGgB,CAEpBI,MAAQ,EACRC,OAHoB,GAIpBC,OAJoB,GAKpBC,OAAQ,GAERC,QAAAA,EAEIA,kBATgB,WAAAC,KAAAF,QAAAE,KAAAF,QAAAG,YAAA,WAAAD,KAAAF,QAiBZI,QAAAC,IAAAH,OAGJI,MApBgB,WAAA,IAAAC,EAAAzB,EAAA,qCAAA,GAwBpB0B,KAAAA,MAxBoBD,GA0BhBC,oBA1BgB,WAsCZC,KAAQC,MAtCI,EAsChBC,MAAA,sCAAAT,KAAAQ,OAtCgB,EAsChBC,MAAA,4BAESA,MAFT,gBAMIC,iBA5CY,WAAA,IA6CZ,IACAH,EAAQP,KAAAQ,MACXG,EAAA,GAPGD,EAAQ,GAxCIH,GAmDpBK,EAnDoBC,EAAA,0DA6CZ,IAOCH,EAAWvB,EAAY,0BAAA,GACnBU,KAALF,OAAiBkB,GAAAA,EACpBN,KAKDK,YA3DgB,WAoDhB,IAAK,IAAIzB,EAAI,EAAGA,EAAI,EAAGA,IAQlBU,KAAOiB,OAAQ3B,GAAA0B,EAAA,uBAAAE,OAAiB5B,EAAA,EAAjB,WAAiB,KA5D7C6B,gBAAwB,WAuExBhB,KAAAH,OAAAiB,QAAA,SAAAG,EAAAC,GAGAhB,QAAAC,IAAA,iBAAAY,OAAAG,EAAA,EAAA,WAAAH,OAAAE,SAMiBjC","file":"../scripts.min.js","sourcesContent":["\n\n/* jshint esversion: 6 */\r\n\r\n/* Задание на урок: 1) У нас уже есть рабочее приложение, состоящее из отдельных функций. Представьте, что\r\nперед вами стоит задача переписать его так, чтобы все функции стали методами объекта personalMovieDB\r\nТакое случается в реальных продуктах при смене технологий или подхода к архитектуре программы\r\n2) Создать метод toggleVisibleMyDB, который при вызове будет проверять свойство privat. Если оно false - он\r\nпереключает его в true, если true - переключает в false. Протестировать вместе с showMyDB.\r\n3) В методе writeYourGenres запретить пользователю нажать кнопку \"отмена\" или оставлять пустую строку. \r\nЕсли он это сделал - возвращать его к этому же вопросу. После того, как все жанры введены - \r\nпри помощи метода forEach вывести в консоль сообщения в таком виде:\r\n\"Любимый жанр #(номер по порядку, начиная с 1) - это (название из массива)\"*/\r\n// Код возьмите из предыдущего домашнего задания\r\n\r\nconst personalMovieDB = {\r\n    count: 0,\r\n    movies: {},\r\n    actors: {},\r\n    genres: [],\r\n    privat: false,\r\n\r\n    toggleVisibleMyDB() {\r\n        this.privat = !this.privat;\r\n        return;\r\n    },\r\n\r\n    showMovieDB() {\r\n        if (!this.privat) console.log(this);\r\n        return;\r\n    },\r\n\r\n    start() {\r\n        'use strict';\r\n        let numberOfFilms = getNumberAnswer(\"Сколько фильмов Вы уже посмотрели?\", 0);\r\n        this.count = numberOfFilms;\r\n        return;\r\n    },\r\n\r\n    detectPersonalLevel() {\r\n        'use strict';\r\n        const\r\n            minFilmsClassicViewer = 3,\r\n            maxFilmsClassicViewer = 7;\r\n\r\n        if (this.count < minFilmsClassicViewer) alert(\"Просмотрено довольно мало фильмов.\");\r\n        else if (this.count <= maxFilmsClassicViewer) alert(\"Вы классический зритель.\");\r\n        else alert(\"Вы киноман!\");\r\n        return;\r\n    },\r\n\r\n    writeMovieScores() {\r\n        const maxFilmNameLength = 50;\r\n        let nextFilm = this.count,\r\n            film = \"\",\r\n            score = \"\";\r\n\r\n        while (nextFilm) {\r\n            film = getNonEmptyAnswer('Название следующего из последних просмотренных фильмов?', maxFilmNameLength);\r\n            score = getNumberAnswer('На сколько оцените его?', 3);\r\n            this.movies[film] = score;\r\n            nextFilm--;\r\n        }\r\n        return;\r\n    },\r\n\r\n    writeGenres() {\r\n        for (let i = 0; i < 3; i++) {\r\n            this.genres[i] = getNonEmptyAnswer(`Ваш любимый жанр на ${i+1} месте?`, 24);\r\n        }\r\n        return;\r\n    },\r\n\r\n    logGenresRating() {\r\n        'use strict';\r\n        this.genres.forEach((item, index) => {\r\n            console.log(`Любимый жанр №${index+1} это - ${item}`);\r\n        });\r\n        return;\r\n    }\r\n\r\n};\r\n\r\n\r\npersonalMovieDB.start();\r\n// personalMovieDB.writeMovieScores();\r\n// personalMovieDB.writeGenres();\r\n\r\n\r\n// personalMovieDB.showMovieDB();\r\n\r\nfunction getNonEmptyAnswer(question, maxAnswerLength) {\r\n    'use strict';\r\n    let answer = \"\";\r\n    do {\r\n        answer = prompt(question, '');\r\n        if (typeof answer === \"string\") answer = normalizationOfSpaces(answer);\r\n    } while (!answer || answer.length > maxAnswerLength);\r\n    return answer;\r\n}\r\n\r\nfunction getNumberAnswer(question, defaultNumber) {\r\n    'use strict';\r\n    let answer = 0;\r\n    do {\r\n        answer = +prompt(question, defaultNumber);\r\n    } while (answer == \"\" || answer == null || isNaN(answer));\r\n    return answer;\r\n}\r\n\r\nfunction normalizationOfSpaces(str) {\r\n    'use strict';\r\n    let sourceStr = str.trim(),\r\n        destStr = \"\",\r\n        nextChar = \"\",\r\n        simpleSpaceSaved = false;\r\n\r\n    if (sourceStr.length) {\r\n        for (let i = 0; i < sourceStr.length; i++) {\r\n            nextChar = sourceStr[i];\r\n            if (nextChar === \" \") {\r\n                if (simpleSpaceSaved) continue;\r\n                else simpleSpaceSaved = true;\r\n            } else if (simpleSpaceSaved) simpleSpaceSaved = false;\r\n            destStr = destStr + nextChar;\r\n        }\r\n        return destStr;\r\n    } else return sourceStr;\r\n}"]}